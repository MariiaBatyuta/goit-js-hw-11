{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst gallery = document.querySelector('.js-gallery');\nconst input = document.querySelector('.input-string');\nconst submit = document.querySelector('.submitBtn');\nconst photoLoader = document.getElementById('photo-loader');\n\nconst BASIC_URL = 'https://pixabay.com/api/';\nconst KEY = '41857217-9df28d1efe56a78287de94859';\nconst ERROR_MESSAGE = 'Sorry, there are no images matching your search query. Please try again!';\n\n\nlet inputValue = '';\n\nconst onInput = (e) => { \n    inputValue = e.target.value;\n}\ninput.addEventListener('input', onInput);\ninput.addEventListener('keydown', (e) => { if (e.key === 'Enter') onClick() });\n\n\nsubmit.addEventListener('click', onClick);\nfunction onClick() {\n    photoLoader.classList.add('loader');\n\n    fetch(`${BASIC_URL}?key=${KEY}&q=${inputValue}&image_type=photo&orientation=horizontal&safesearch=true`)\n        .then(res => res.json())\n        .then(images => {\n            if (inputValue.trim() === '') return iziToast.error({title: 'Error', message: 'Please, type a search query'})\n            if (images.total === 0) return iziToast.error({ title: 'Error', message: `${ERROR_MESSAGE}` })\n           \n            const imagePromises = images.hits.map(img => loadImage(img.webformatURL));\n\n            Promise.all(imagePromises)\n                .then(() => {\n                    const marcup = images.hits.reduce((html, img) => html + `\n                <li class=\"gallery-item\">\n                    <a href=\"${img.largeImageURL}\" class=\"gallery-image-lightbox\">\n                        <img class=\"gallery-image\"\n                            src=\"${img.webformatURL}\"\n                            alt=\"${img.tags}\"\n                        />\n                    </a>\n                    <div class=\"photo-info\">\n                        <p class=\"item-info\"><b>Likes</b><br>${img.likes}</p>\n                        <p class=\"item-info\"><b>Views</b><br>${img.views}</p>\n                        <p class=\"item-info\"><b>Comments</b><br>${img.comments}</p>\n                        <p class=\"item-info\"><b>Dowloads</b><br>${img.downloads}</p>\n                    </div>\n                </li>`, '');\n                    gallery.innerHTML = marcup;\n                    \n                    const lightbox = new SimpleLightbox('.gallery-image-lightbox', {\n                        captions: true, \n                        captionPosition: 'bottom', \n                        captionsData: 'alt', \n                        close: true, \n                        loop: true, \n                        enableKeyboard: true, \n                        slideSpeed: 400, \n                    });\n                    lightbox.refresh();\n                })\n                .catch((error) => {\n                    console.log('Error loading photos: ', error);\n                    iziToast.error({ title: 'Error', message: 'Error loading photos' });\n                    photoLoader.classList.remove('loader');\n                })\n                .finally(() => {\n                    input.value = '';\n                    photoLoader.classList.remove('loader'); \n                });\n        })\n        .catch(error => {\n            console.error('Error fetching photos:', error);\n            iziToast.error({ title: 'Error', message: 'Error fetching photos' });\n            photoLoader.classList.remove('loader');\n        }) \n};\n\nfunction loadImage(url) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n        image.onload = resolve;\n        image.onerror = reject;\n        image.src = url;\n    });\n}\n\n\n"],"names":["gallery","input","submit","photoLoader","BASIC_URL","KEY","ERROR_MESSAGE","inputValue","onInput","e","onClick","res","images","iziToast","imagePromises","img","loadImage","marcup","html","SimpleLightbox","error","url","resolve","reject","image"],"mappings":"wvBAMA,MAAMA,EAAU,SAAS,cAAc,aAAa,EAC9CC,EAAQ,SAAS,cAAc,eAAe,EAC9CC,EAAS,SAAS,cAAc,YAAY,EAC5CC,EAAc,SAAS,eAAe,cAAc,EAEpDC,EAAY,2BACZC,EAAM,qCACNC,EAAgB,2EAGtB,IAAIC,EAAa,GAEjB,MAAMC,EAAWC,GAAM,CACnBF,EAAaE,EAAE,OAAO,KAC1B,EACAR,EAAM,iBAAiB,QAASO,CAAO,EACvCP,EAAM,iBAAiB,UAAYQ,GAAM,CAAMA,EAAE,MAAQ,SAASC,EAAS,CAAA,CAAE,EAG7ER,EAAO,iBAAiB,QAASQ,CAAO,EACxC,SAASA,GAAU,CACfP,EAAY,UAAU,IAAI,QAAQ,EAElC,MAAM,GAAGC,SAAiBC,OAASE,2DAAoE,EAClG,KAAKI,GAAOA,EAAI,MAAM,EACtB,KAAKC,GAAU,CACZ,GAAIL,EAAW,SAAW,GAAI,OAAOM,EAAS,MAAM,CAAC,MAAO,QAAS,QAAS,6BAA6B,CAAC,EAC5G,GAAID,EAAO,QAAU,EAAG,OAAOC,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,GAAGP,GAAe,CAAE,EAE7F,MAAMQ,EAAgBF,EAAO,KAAK,IAAIG,GAAOC,EAAUD,EAAI,YAAY,CAAC,EAExE,QAAQ,IAAID,CAAa,EACpB,KAAK,IAAM,CACR,MAAMG,EAASL,EAAO,KAAK,OAAO,CAACM,EAAMH,IAAQG,EAAO;AAAA;AAAA,+BAE7CH,EAAI;AAAA;AAAA,mCAEAA,EAAI;AAAA,mCACJA,EAAI;AAAA;AAAA;AAAA;AAAA,+DAIwBA,EAAI;AAAA,+DACJA,EAAI;AAAA,kEACDA,EAAI;AAAA,kEACJA,EAAI;AAAA;AAAA,uBAE9C,EAAE,EACNf,EAAQ,UAAYiB,EAEH,IAAIE,EAAe,0BAA2B,CAC3D,SAAU,GACV,gBAAiB,SACjB,aAAc,MACd,MAAO,GACP,KAAM,GACN,eAAgB,GAChB,WAAY,GACpC,CAAqB,EACQ,QAAO,CACpC,CAAiB,EACA,MAAOC,GAAU,CACd,QAAQ,IAAI,yBAA0BA,CAAK,EAC3CP,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,sBAAsB,CAAE,EAClEV,EAAY,UAAU,OAAO,QAAQ,CACzD,CAAiB,EACA,QAAQ,IAAM,CACXF,EAAM,MAAQ,GACdE,EAAY,UAAU,OAAO,QAAQ,CACzD,CAAiB,CACjB,CAAS,EACA,MAAMiB,GAAS,CACZ,QAAQ,MAAM,yBAA0BA,CAAK,EAC7CP,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,uBAAuB,CAAE,EACnEV,EAAY,UAAU,OAAO,QAAQ,CACjD,CAAS,CACT,CAEA,SAASa,EAAUK,EAAK,CACpB,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACpC,MAAMC,EAAQ,IAAI,MAClBA,EAAM,OAASF,EACfE,EAAM,QAAUD,EAChBC,EAAM,IAAMH,CACpB,CAAK,CACL"}